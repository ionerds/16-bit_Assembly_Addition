;Coded By : Mohamed El Sayed
;www.ionerds.com	-	2016     
;NBASMCALC.ASM
;NBASM v 00.26.59 compatible code
;Output : .COM

.MODEL TINY
.CODE
	ORG 100H				;SET THE ASSEMBLER LOCATION COUNTER
	MOV SI, OFFSET STNUM	;MOVE THE OFFSET OF STNUM VARIABLE TO SI
	CALL PRINT				;CALL PRINT FUNCTION TO PRINT THE STRING THAT SAVED IN SI
	MOV AH, 01H				;READ CHAR
	INT 21H					;DO READ
	SUB AL, '0'				;CONVERT IT TO DECIMAL
	MOV X, AL 				;SOTRE IT IN X VAR
	MOV SI, OFFSET NL		;PRINT NEW LINE
	CALL PRINT 				;DO PRINT
	MOV SI, OFFSET NDNUM	;PRINT NDNUM STR
	CALL PRINT				;DO PRINT
	MOV AH, 01H 			;READ CHAR
	INT 21H					;DO READ
	SUB AL, '0'				;CONVERT IT TO DECIMAL VALUE
	MOV Y, AL 				;STORE IT IN Y VAR
	MOV DL, X		       ;|COPY IT TO DL REGISTER TO BE ABLE TO DO MATHIMATICAL OPERTAIONS ON IT
	ADD DL, Y			   ;|ADD THE VALUE OF Y VAR TO X VAR, NOW DL = X+Y
	ADD DL, '0'            ;|CONVERT THE NUMBER IN DL TO ITS ASCII CODE TO PRINT IT
	MOV TEMP, DL           ;|STORE IT IN TEMP VAR
	MOV SI, OFFSET NL 		;PRINT NEW LINE
	CALL PRINT
	MOV SI, OFFSET RESULT
	CALL PRINT 				;PRINT RESULT STR
	MOV SI, OFFSET TEMP 
	CALL PRINT				;PRINT THE RESULT ITSELF
	
	MOV AX, 4C00H
	INT 21H					;RETURN CONTROL BACK TO DOS
	; <====(TELETYPE PRINTING METHOD)====>
PRINT:
	LODSB			;LOAD ONE BYTE FROM SI TO AL REGISTER
	CMP AL, '$'		;COMPARE THE CURRENT BYTE, IF IT CONTAINS '$' SO THE FUNCTION DONE PRINTING, JUMP TO DONE
	JE DONE			;JMPING DIRECTIVE
	MOV AH, 0EH 	;IF THIS CODE IS EXECUTED THATS MEAN THERE IS SOME CHARS NOT PRINTED, PRINT THEM
	INT 10H			;DO PRINT
	JMP SHORT PRINT	;GO BACK TO THE BEGINING OF THE FUNCTION AND STILL DO SO TILL THE LAST BYTE = '$' SO THIS CODE BLOCK WONT BE EXECUTED
DONE:
	RET				;RETURN TO THE CALLER FUNCTION

STNUM	DB	"ENTER THE FIRST NUMBER : $"
NDNUM	DB	"ENTER THE SECOND NUMBER : $"
RESULT	DB	"RESULT IS : $"
NL		DB   0,13,10,'$'
X		DB	 0,13,10,'$'
Y		DB	 0,13,10,'$'
TEMP 	DB	 0,13,10,'$'

.END